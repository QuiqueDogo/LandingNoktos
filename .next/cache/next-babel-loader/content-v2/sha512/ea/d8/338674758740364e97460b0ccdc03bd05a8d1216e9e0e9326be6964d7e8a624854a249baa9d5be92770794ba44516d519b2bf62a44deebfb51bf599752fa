{"ast":null,"code":"import axios from \"axios\";\nimport { apiRoutes } from '../utils/apiRoutes';\nimport { setConfigurationRequest } from \"../utils/requests\";\nexport const getUsersRequest = async () => {\n  return await axios.get(`${apiRoutes.baseUrl}${apiRoutes.baseCompanies}/${apiRoutes.getUsers}`, setConfigurationRequest());\n};\nexport const getDetailUserRequest = async userId => {\n  return await axios.get(`${apiRoutes.baseUrl}${apiRoutes.users}/${apiRoutes.detail}/${userId}`, setConfigurationRequest());\n};\nexport const createUserRequest = async dataRequest => {\n  return await axios.post(`${apiRoutes.baseUrl}${apiRoutes.baseCompanies}/${apiRoutes.createUser}`, dataRequest, setConfigurationRequest());\n};\nexport const updateUserRequest = async dataRequest => {\n  return await axios.put(`${apiRoutes.baseUrl}${apiRoutes.baseCompanies}/${apiRoutes.updateUser}`, dataRequest, setConfigurationRequest());\n};\nexport const deleteUserRequest = async dataRequest => {\n  return await axios.post(`${apiRoutes.baseUrl}${apiRoutes.baseCompanies}/${apiRoutes.deleteUser}`, dataRequest, setConfigurationRequest());\n};\nexport const updateRFCRequest = async dataRequest => {\n  return await axios.put(`${apiRoutes.baseUrl}${apiRoutes.baseCompanies}/${apiRoutes.updateRFC}`, dataRequest, setConfigurationRequest());\n};\nexport const approveNoktosIncreaseRequest = async dataRequest => {\n  return await axios.post(`${apiRoutes.baseUrl}${apiRoutes.authorizationResponse}`, dataRequest, setConfigurationRequest());\n};\nexport const getInfoAboutNoktosRequest = async requestId => {\n  return await axios.get(`${apiRoutes.baseUrl}${apiRoutes.getInfoAboutNoktosRequest}/${requestId}`, setConfigurationRequest());\n};\nexport const getUserWallet = compania_id => {\n  const headers = setConfigurationRequest();\n  const {\n    baseUrl,\n    membership,\n    balance\n  } = apiRoutes;\n  const URL = `${baseUrl}${membership}${balance}`;\n  const body = {\n    compania_id\n  };\n  return axios.post(URL, body, headers);\n};","map":null,"metadata":{},"sourceType":"module"}