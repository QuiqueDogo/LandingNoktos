{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { types } from \"../types\";\nconst initialState = {\n  data: {},\n  historial: [],\n  optionMenu: 0,\n  loading: false,\n  prevPath: null,\n  showDrawer: false,\n  pricePackageSelected: 1\n};\nexport default ((state = initialState, action) => {\n  var _newHistorial;\n\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case types.show_loader:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case types.hide_loader:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false\n      });\n\n    case types.show_drawer:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showDrawer: true\n      });\n\n    case types.hide_drawer:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showDrawer: false\n      });\n\n    case types.set_option_menu:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        optionMenu: payload\n      });\n\n    case types.change_modal_login_status:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        modal_login_status: payload.modal_login_status\n      });\n\n    case types.set_package_price_selected:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pricePackageSelected: payload\n      });\n\n    case types.set_historial_pages:\n      const {\n        historial\n      } = state;\n      let newHistorial = historial.slice();\n      newHistorial.push(payload);\n      if (newHistorial.length > 10) newHistorial.shift();\n      return _objectSpread(_objectSpread({}, state), {}, {\n        historial: newHistorial,\n        prevPath: (_newHistorial = newHistorial[newHistorial.length - 2]) !== null && _newHistorial !== void 0 ? _newHistorial : null\n      });\n\n    case types.clear_historial_pages:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        historial: []\n      });\n\n    default:\n      return state;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}