{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Content from \"./Content\";\nimport { getUserWallet } from \"services/usersService\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUserWallet } from \"redux/actions/userAction\";\nimport { useEffect, useCallback, memo, useState } from \"react\";\n\nconst HeaderLogin = () => {\n  const dispatch = useDispatch();\n  const {\n    0: canBuyTokens,\n    1: setCanBuyTokens\n  } = useState(false);\n  const {\n    company\n  } = useSelector(({\n    company\n  }) => company);\n  const userState = useSelector(({\n    user\n  }) => user);\n  const {\n    user,\n    rol,\n    userWallet,\n    reloadUserWallet\n  } = userState;\n  const getWallet = useCallback(async () => {\n    try {\n      const companyId = company === null || company === void 0 ? void 0 : company.id;\n      const {\n        data\n      } = await getUserWallet(companyId);\n      const {\n        saldoMembresia\n      } = data;\n      const {\n        saldo_token,\n        saldo_noches_gratis\n      } = saldoMembresia;\n      const wallet = {\n        noktos: saldo_token,\n        centauros: saldo_noches_gratis\n      };\n      dispatch(setUserWallet(wallet));\n    } catch (err) {\n      console.log(err);\n    }\n  }, [company, reloadUserWallet]);\n  const checkPermits = useCallback(() => {\n    var _rol$modulos;\n\n    const moduleShoppings = rol === null || rol === void 0 ? void 0 : (_rol$modulos = rol.modulos) === null || _rol$modulos === void 0 ? void 0 : _rol$modulos.filter(({\n      id\n    }) => id === 7);\n    if (!moduleShoppings) setCanBuyTokens(false);else {\n      if (!moduleShoppings.length) setCanBuyTokens(false);else {\n        const sectionBuyNoktos = moduleShoppings[0].secciones.filter(({\n          id\n        }) => id === 30);\n        if (!sectionBuyNoktos.length) setCanBuyTokens(false);else {\n          const buyAction = sectionBuyNoktos[0].acciones.filter(({\n            id\n          }) => id === 32);\n          if (buyAction.length > 0) setCanBuyTokens(true);\n        }\n      }\n    }\n  }, [rol]);\n  useEffect(() => {\n    checkPermits();\n  }, [checkPermits]);\n  useEffect(() => {\n    getWallet();\n  }, [getWallet]);\n  return /*#__PURE__*/_jsx(Content, {\n    user: user,\n    wallet: userWallet,\n    canBuyTokens: canBuyTokens\n  });\n};\n\nexport default /*#__PURE__*/memo(HeaderLogin);","map":null,"metadata":{},"sourceType":"module"}