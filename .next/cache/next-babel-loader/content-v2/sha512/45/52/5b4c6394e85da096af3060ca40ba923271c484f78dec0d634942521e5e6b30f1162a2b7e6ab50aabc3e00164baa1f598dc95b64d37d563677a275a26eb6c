{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Quique/Desktop/LandingCustomers/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Quique/Desktop/LandingCustomers/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { types } from \"../types\";\nimport axios from \"axios\";\nimport { apiRoutes } from \"../../utils/apiRoutes\";\nimport { setConfigurationRequest } from \"../../utils/requests\";\nimport moment from \"moment\";\nvar show_loader = types.show_loader,\n    hide_loader = types.hide_loader,\n    get_membership = types.get_membership,\n    get_previous_balance = types.get_previous_balance,\n    set_membership_balance = types.set_membership_balance,\n    get_movements = types.get_movements,\n    get_movements_history = types.get_movements_history;\nexport var setSelectedMembership = function setSelectedMembership(membership) {\n  return {\n    type: types.select_membership,\n    payload: {\n      membership: membership\n    }\n  };\n};\nexport var setSelectedMembershipPackage = function setSelectedMembershipPackage(membershipPackage) {\n  return {\n    type: types.select_membership_package,\n    payload: {\n      membershipPackage: membershipPackage\n    }\n  };\n};\nexport var setMembershipOfCompany = function setMembershipOfCompany(membershipOfCompany) {\n  return {\n    type: types.set_membership_of_company,\n    payload: {\n      membershipOfCompany: membershipOfCompany\n    }\n  };\n};\nexport var setMembershipBalance = function setMembershipBalance(membershipBalance) {\n  return {\n    type: types.set_membership_balance,\n    payload: {\n      membershipBalance: membershipBalance\n    }\n  };\n};\nexport var getMembership = function getMembership(body) {\n  return function (dispatch) {\n    dispatch({\n      type: show_loader\n    });\n    axios.post(\"\".concat(apiRoutes.baseUrl).concat(apiRoutes.membership), body, setConfigurationRequest()).then(function (response) {\n      dispatch({\n        type: hide_loader\n      });\n      dispatch({\n        type: get_membership,\n        payload: {\n          membership: response.data.membresia\n        }\n      });\n    })[\"catch\"](function (error) {\n      console.log(error);\n      dispatch({\n        type: hide_loader\n      });\n    });\n  };\n};\nexport var getPrevBalance = function getPrevBalance(body) {\n  return function (dispatch) {\n    dispatch({\n      type: show_loader\n    });\n    axios.post(\"\".concat(apiRoutes.baseUrl).concat(apiRoutes.baseCompanies).concat(apiRoutes.prevBalanceAaccount), body, setConfigurationRequest()).then(function (response) {\n      dispatch({\n        type: hide_loader\n      });\n      dispatch({\n        type: get_previous_balance,\n        payload: {\n          previousBalance: response.data.saldosToken,\n          payCentauros: response.data.abonos_centauros\n        }\n      }); // setPrevBalance(response.data.saldosToken);\n    })[\"catch\"](function (error) {\n      dispatch({\n        type: hide_loader\n      });\n      console.log(error);\n    });\n  };\n};\nexport var getMembershipBalance = function getMembershipBalance(body) {\n  return function (dispatch) {\n    axios.post(\"\".concat(apiRoutes.baseUrl).concat(apiRoutes.membership).concat(apiRoutes.balance), body, setConfigurationRequest()).then(function (response) {\n      dispatch({\n        type: set_membership_balance,\n        payload: {\n          membershipBalance: response.data.saldoMembresia\n        }\n      });\n    })[\"catch\"](function (error) {\n      dispatch({\n        type: hide_loader\n      });\n      console.log(error);\n    });\n  };\n};\nexport var get_YYYY_MM_DD_format = function get_YYYY_MM_DD_format(date) {\n  return moment(date).format(\"YYYY-MM-DD\");\n};\n\nvar createDates = function createDates(date) {\n  var newDate = new Date();\n  var day = parseInt(date.split(\"-\")[date.split(\"-\").length - 1]);\n  newDate.setDate(day);\n  newDate = get_YYYY_MM_DD_format(newDate);\n  var todayOneMonthAgo = moment(newDate).subtract(1, \"months\").format(\"YYYY-MM-DD\");\n  return {\n    newDate: newDate,\n    todayOneMonthAgo: todayOneMonthAgo\n  };\n};\n\nexport var getMovements = function getMovements(membershipBalance, selectedCompany, data) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var eDate, sDate, hierarchy, mainTraveller, dataRequest, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(membershipBalance.fecha !== undefined)) {\n                _context.next = 16;\n                break;\n              }\n\n              dispatch({\n                type: show_loader\n              });\n              eDate = data.eDate, sDate = data.sDate, hierarchy = data.hierarchy, mainTraveller = data.mainTraveller;\n              dataRequest = {\n                compania_id: selectedCompany.id,\n                fecha_inicio: moment(sDate).format(\"YYYY-MM-DD\"),\n                fecha_fin: moment(eDate).format(\"YYYY-MM-DD\"),\n                huesped_id: mainTraveller,\n                jerarquia_id: hierarchy\n              };\n              _context.prev = 4;\n              _context.next = 7;\n              return axios.post(\"\".concat(apiRoutes.baseUrl).concat(apiRoutes.baseCompanies).concat(apiRoutes.movements), dataRequest, setConfigurationRequest());\n\n            case 7:\n              response = _context.sent;\n              dispatch({\n                type: hide_loader\n              });\n              dispatch({\n                type: get_movements,\n                payload: {\n                  payWithToken: response.data.pagosToken,\n                  payMarketPlace: response.data.pagosMP,\n                  buyTokens: response.data.compraTokens,\n                  devolutions: response.data.devoluciones\n                }\n              });\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](4);\n              dispatch({\n                type: hide_loader\n              });\n              console.log(\"THIIIS IS THE ERROR\", _context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 12]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getMovementsHistory = function getMovementsHistory(selectedCompany, dates) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var dataRequest, anio, mes, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: show_loader\n              });\n              anio = dates.anio, mes = dates.mes;\n              console.log(\"Fechas\", dates);\n              dataRequest = {\n                compania_id: selectedCompany.id,\n                anio: anio,\n                mes: mes\n              };\n              _context2.prev = 4;\n              _context2.next = 7;\n              return axios.post(\"\".concat(apiRoutes.baseUrl).concat(apiRoutes.baseCompanies).concat(apiRoutes.historical).concat(apiRoutes.movements), dataRequest, setConfigurationRequest());\n\n            case 7:\n              response = _context2.sent;\n              dispatch({\n                type: hide_loader\n              });\n              console.log(response.data);\n              dispatch({\n                type: get_movements_history,\n                payload: {\n                  payWithToken: response.data.pagosToken,\n                  payMarketPlace: response.data.pagosMP,\n                  buyTokens: response.data.compraTokens,\n                  //TODO FALTAN DEVOLUCIONES\n                  //TODO CENTRO DE COSTOS\n                  devolutions: [],\n                  prevMembershipBalance: response.data.saldoMembresiaAnterior\n                }\n              });\n              _context2.next = 17;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](4);\n              dispatch({\n                type: hide_loader\n              });\n              console.log(\"ERROR MEMBERSHIP ACTION\", _context2.t0.response);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[4, 13]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}