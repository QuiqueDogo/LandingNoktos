{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Support from \"components/Support/Support\";\nimport MainPage from \"./components/MainPage/MainPage\";\nimport OurPlans from \"./components/OurPlans/OurPlans\";\nimport TableInfo from \"./components/TableInfo/TableInfo\";\nimport PricesInfo from \"./components/PricesInfo/PricesInfo\";\nimport LandingPageLayout from \"components/layouts/LandingPageLayout/LandingPageLayout\";\nimport { useEffect, useState } from \"react\";\nimport { hideLoader, showLoader } from \"../../redux/actions/application\";\nimport axios from \"axios\";\nimport { apiRoutes } from \"../../utils/apiRoutes\";\nimport { setBasicConfigurationRequest, setConfigurationRequest } from \"../../utils/requests\";\nimport Swal from \"sweetalert2\";\nimport { setSelectedMembership } from \"../../redux/actions/membershipAction\";\nimport { useDispatch } from \"react-redux\";\nimport { getBenefitsCatalog, getCataloOfMembership } from \"../../services/membershipService\";\nimport AllBenefits from \"./components/AllBenefits/AllBenefits\";\nimport useIsDesktop from \"../../customHooks/useIsDesktop\";\n\nconst Prices = () => {\n  const {\n    0: benefits,\n    1: setBenefits\n  } = useState([]);\n  const {\n    0: memberships,\n    1: setMemberships\n  } = useState([]);\n  const [isDesktop] = useIsDesktop();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getMembershipCatalog();\n    getBenefits();\n  }, []);\n\n  const getMembershipCatalog = () => {\n    dispatch(showLoader());\n    getCataloOfMembership().then(response => {\n      dispatch(hideLoader());\n      let allMemberships = [];\n\n      for (let membership of response.data.suscripciones_membresias) {\n        if (membership.catalogo_membresia.length > 0) {\n          let value = {\n            \"name_membership\": membership.nombre,\n            \"discount\": membership.descuento,\n            \"price_membership\": membership.catalogo_membresia[0].costo_anual,\n            \"price_membership_month\": membership.catalogo_membresia[0].costo_mensual,\n            \"id_membership\": membership.id,\n            \"tokens\": membership.catalogo_membresia[0].numero_tokens,\n            \"nights\": membership.catalogo_membresia[0].noches_gratis,\n            \"id_package\": membership.catalogo_membresia[0].id,\n            \"description\": setDescription(membership),\n            \"description_extra\": \"\"\n          };\n\n          if (membership.id < 4) {\n            allMemberships.push(value);\n          } else {//annualMemberships.push(value)\n          } //allMemberships.push(value)\n\n        }\n      }\n\n      const freePlan = {\n        \"name_membership\": \"GRATUITA\",\n        \"discount\": \"\",\n        \"price_membership\": \"0\",\n        \"price_membership_month\": \"\",\n        \"id_membership\": \"free\",\n        \"tokens\": \"\",\n        \"nights\": \"\",\n        \"id_package\": \"free\",\n        \"description\": \"Inscríbete al ecosistema y disfruta de los beneficios.\",\n        \"description_extra\": \"Perfecto para que utilices nuestra plataforma Noktos y descubras lo que tenemos para ofrecerte con nuestros servicios.\"\n      };\n      allMemberships.push(freePlan);\n      console.log(\"allMemberships\");\n      console.log(allMemberships);\n      setMemberships(allMemberships);\n    }).catch(error => {\n      dispatch(hideLoader());\n      console.log(\"error\");\n      console.log(error);\n    });\n  };\n\n  const getBenefits = () => {\n    dispatch(showLoader());\n    getBenefitsCatalog().then(response => {\n      dispatch(hideLoader());\n      response.data.rubro_beneficios.map(typeOfBenefits => typeOfBenefits.beneficios.map(benefits => benefits.suscripciones.map(suscription => {\n        if (suscription.id === 1) {\n          let basic = _objectSpread({}, benefits.suscripciones[0]);\n\n          basic.id = \"free\";\n          basic.nombre = \"GRATUITA\";\n          return benefits.suscripciones = [...benefits.suscripciones, basic];\n        } else {\n          return benefits.suscripciones;\n        }\n      })));\n      setBenefits(response.data.rubro_beneficios);\n    }).catch(error => {\n      dispatch(hideLoader());\n      console.log(error);\n    });\n  };\n\n  const setDescription = membership => {\n    switch (membership.id) {\n      case 1:\n        return \"Para negocios con viajes esporádicos o poco frecuentes\";\n\n      case 2:\n        return \"Para empresas con viajes de negocios poco frecuentes\";\n\n      case 3:\n        return \"Para alta demanda de viajes de negocios\";\n\n      case 4:\n        return \"Para negocios con viajes esporádicoso poco frecuentes\";\n\n      case 5:\n        return \"Para empresas con viajes de negocios poco frecuentes\";\n\n      case 6:\n        return \"Para alta demanda de viajes de negocios\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(LandingPageLayout, {\n    title: \"Precios\",\n    children: [/*#__PURE__*/_jsx(MainPage, {}), /*#__PURE__*/_jsx(OurPlans, {}), /*#__PURE__*/_jsx(PricesInfo, {\n      memberships: memberships,\n      fromScreen: 1\n    }), !isDesktop && /*#__PURE__*/_jsx(TableInfo, {\n      benefits: benefits\n    }), isDesktop && /*#__PURE__*/_jsx(AllBenefits, {\n      benefits: benefits\n    }), /*#__PURE__*/_jsx(Support, {})]\n  });\n};\n\nexport default Prices;","map":null,"metadata":{},"sourceType":"module"}