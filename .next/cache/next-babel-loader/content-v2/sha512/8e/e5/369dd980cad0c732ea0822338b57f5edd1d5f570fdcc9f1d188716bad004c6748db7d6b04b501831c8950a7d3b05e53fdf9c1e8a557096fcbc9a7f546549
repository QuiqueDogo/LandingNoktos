{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Content from \"./Content\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, connect } from \"react-redux\";\nimport { setOptionMenu } from \"redux/actions/application\";\n\nconst Menu = ({\n  rol\n}) => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    0: canReservate,\n    1: setCanReservate\n  } = useState(false);\n  const {\n    0: canCheckMyShoppings,\n    1: setCanCheckMyShoppings\n  } = useState(false);\n  const {\n    0: canCheckMyReservations,\n    1: setCanCheckMyReservations\n  } = useState(false);\n\n  const handleChange = (ev, value) => dispatch(setOptionMenu(value));\n\n  useEffect(() => {\n    const {\n      pathname\n    } = router;\n    checkPermits();\n\n    switch (pathname) {\n      case \"/\":\n        dispatch(setOptionMenu(0));\n        break;\n\n      case \"/dashboard\":\n        dispatch(setOptionMenu(1));\n        break;\n\n      case \"/mis-compras\":\n        dispatch(setOptionMenu(2));\n        break;\n\n      case \"/reservation/search\":\n        dispatch(setOptionMenu(3));\n        break;\n\n      case \"/reservations\":\n        dispatch(setOptionMenu(4));\n        break;\n\n      default:\n        dispatch(setOptionMenu(null));\n    }\n  }, []);\n\n  const checkPermits = () => {\n    var _rol$modulos, _rol$modulos2;\n\n    const moduleShoppings = (_rol$modulos = rol.modulos) === null || _rol$modulos === void 0 ? void 0 : _rol$modulos.filter(modulo => modulo.id === 7);\n    const moduleReservations = (_rol$modulos2 = rol.modulos) === null || _rol$modulos2 === void 0 ? void 0 : _rol$modulos2.filter(modulo => modulo.id === 1);\n\n    if (moduleReservations !== undefined && moduleShoppings !== undefined) {\n      if (moduleShoppings.length === 0) {\n        //USUARIO NO TIENE PERMISO\n        setCanCheckMyShoppings(false);\n      } else {\n        const sectionMyShoppings = moduleShoppings[0].secciones.filter(section => section.id === 122);\n\n        if (sectionMyShoppings.length === 0) {\n          setCanCheckMyShoppings(false);\n        } else {\n          const getAction = sectionMyShoppings[0].acciones.filter(actions => actions.id === 123);\n\n          if (getAction.length > 0) {\n            setCanCheckMyShoppings(true);\n          }\n        }\n      }\n\n      if (moduleReservations.length === 0) {\n        //USUARIO NO TIENE PERMISO\n        setCanCheckMyReservations(false);\n        setCanReservate(false);\n      } else {\n        const getAction = moduleReservations[0].acciones.filter(actions => actions.id === 9);\n        const createAction = moduleReservations[0].acciones.filter(actions => actions.id === 34);\n        if (getAction.length > 0) setCanCheckMyReservations(true);\n        if (createAction.length > 0) setCanReservate(true);\n      }\n    } else {\n      setCanReservate(false);\n      setCanCheckMyShoppings(false);\n      setCanCheckMyReservations(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(Content, {\n    handleChange: handleChange,\n    canReservate: canReservate,\n    canCheckMyShoppings: canCheckMyShoppings,\n    canCheckMyReservations: canCheckMyReservations\n  });\n};\n\nfunction mapStateToProps(state) {\n  return {\n    rol: state.user.rol\n  };\n}\n\nexport default connect(mapStateToProps)(Menu);","map":null,"metadata":{},"sourceType":"module"}