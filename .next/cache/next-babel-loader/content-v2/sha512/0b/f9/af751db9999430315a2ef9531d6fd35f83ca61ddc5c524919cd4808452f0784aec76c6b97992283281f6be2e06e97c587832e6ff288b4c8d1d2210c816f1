{"ast":null,"code":"import moment from \"moment\";\nimport Swal from \"sweetalert2\";\nexport function scrollToTop() {\n  window.scroll({\n    top: 0,\n    left: 0,\n    behavior: \"smooth\"\n  });\n}\nexport const compareDates = (a, b) => {\n  const completeDateA = new moment(a.fecha).format(\"YYYY-MM-DD HH:mm:ss\");\n  const completeDateB = new moment(b.fecha).format(\"YYYY-MM-DD HH:mm:ss\");\n  if (completeDateA > completeDateB) return 1;else if (completeDateA < completeDateB) return -1;else return 0;\n};\nexport const checkIfSessionExist = router => {\n  const token = localStorage.getItem(\"local_token\"); // if (token !== null) router.push(\"/dashboard\")\n};\nexport const showToast = ({\n  type,\n  text,\n  duration\n}) => {\n  const Toast = Swal.mixin({\n    toast: true,\n    position: \"top-end\",\n    showConfirmButton: false,\n    timer: duration,\n    timerProgressBar: true,\n    didOpen: toast => {\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n    }\n  });\n  Toast.fire({\n    icon: type,\n    title: text\n  });\n};\nexport const getFormatDate = date => moment(date).format(\"YYYY-MM-DD\");\nexport const getNumberOfDays = (start, end) => {\n  const endDate = moment(end);\n  const startDate = moment(start);\n  const days = endDate.diff(startDate, \"days\");\n  return days;\n};\nexport const downloadPDF = ({\n  documentLink,\n  name,\n  callback,\n  extension\n}) => {\n  try {\n    const linkSource = `data:application/${extension};base64,${documentLink}`;\n    const downloadLink = document.createElement(\"a\");\n    const fileName = `${name}.${extension}`;\n    downloadLink.href = linkSource;\n    downloadLink.download = fileName;\n    downloadLink.click();\n\n    if (callback !== null) {\n      callback();\n    }\n  } catch (ex) {\n    console.log(ex);\n  }\n};\nexport const removeDoubleSpaces = value => {\n  if (typeof value !== \"string\") return value;\n  const arrStr = value.split(' ');\n  const expVacio = /^\\s*$/;\n\n  const vacio = str => expVacio.test(str);\n\n  const newArrStr = arrStr.filter(arr => !vacio(arr));\n  return newArrStr.join(' ');\n};","map":null,"metadata":{},"sourceType":"module"}