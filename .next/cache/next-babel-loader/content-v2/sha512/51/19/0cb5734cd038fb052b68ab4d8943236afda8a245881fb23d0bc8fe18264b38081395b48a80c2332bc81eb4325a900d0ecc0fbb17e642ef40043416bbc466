{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Content from \"./Content\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, connect } from \"react-redux\";\nimport { setOptionMenu } from \"redux/actions/application\";\n\nvar Menu = function Menu(_ref) {\n  var rol = _ref.rol;\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      canReservate = _useState[0],\n      setCanReservate = _useState[1];\n\n  var _useState2 = useState(false),\n      canCheckMyShoppings = _useState2[0],\n      setCanCheckMyShoppings = _useState2[1];\n\n  var _useState3 = useState(false),\n      canCheckMyReservations = _useState3[0],\n      setCanCheckMyReservations = _useState3[1];\n\n  var handleChange = function handleChange(ev, value) {\n    return dispatch(setOptionMenu(value));\n  };\n\n  useEffect(function () {\n    var pathname = router.pathname;\n    checkPermits();\n\n    switch (pathname) {\n      case \"/\":\n        dispatch(setOptionMenu(0));\n        break;\n\n      case \"/dashboard\":\n        dispatch(setOptionMenu(1));\n        break;\n\n      case \"/mis-compras\":\n        dispatch(setOptionMenu(2));\n        break;\n\n      case \"/reservation/search\":\n        dispatch(setOptionMenu(3));\n        break;\n\n      case \"/reservations\":\n        dispatch(setOptionMenu(4));\n        break;\n\n      default:\n        dispatch(setOptionMenu(null));\n    }\n  }, []);\n\n  var checkPermits = function checkPermits() {\n    var _rol$modulos, _rol$modulos2;\n\n    var moduleShoppings = (_rol$modulos = rol.modulos) === null || _rol$modulos === void 0 ? void 0 : _rol$modulos.filter(function (modulo) {\n      return modulo.id === 7;\n    });\n    var moduleReservations = (_rol$modulos2 = rol.modulos) === null || _rol$modulos2 === void 0 ? void 0 : _rol$modulos2.filter(function (modulo) {\n      return modulo.id === 1;\n    });\n\n    if (moduleReservations !== undefined && moduleShoppings !== undefined) {\n      if (moduleShoppings.length === 0) {\n        //USUARIO NO TIENE PERMISO\n        setCanCheckMyShoppings(false);\n      } else {\n        var sectionMyShoppings = moduleShoppings[0].secciones.filter(function (section) {\n          return section.id === 122;\n        });\n\n        if (sectionMyShoppings.length === 0) {\n          setCanCheckMyShoppings(false);\n        } else {\n          var getAction = sectionMyShoppings[0].acciones.filter(function (actions) {\n            return actions.id === 123;\n          });\n\n          if (getAction.length > 0) {\n            setCanCheckMyShoppings(true);\n          }\n        }\n      }\n\n      if (moduleReservations.length === 0) {\n        //USUARIO NO TIENE PERMISO\n        setCanCheckMyReservations(false);\n        setCanReservate(false);\n      } else {\n        var _getAction = moduleReservations[0].acciones.filter(function (actions) {\n          return actions.id === 9;\n        });\n\n        var createAction = moduleReservations[0].acciones.filter(function (actions) {\n          return actions.id === 34;\n        });\n        if (_getAction.length > 0) setCanCheckMyReservations(true);\n        if (createAction.length > 0) setCanReservate(true);\n      }\n    } else {\n      setCanReservate(false);\n      setCanCheckMyShoppings(false);\n      setCanCheckMyReservations(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(Content, {\n    handleChange: handleChange,\n    canReservate: canReservate,\n    canCheckMyShoppings: canCheckMyShoppings,\n    canCheckMyReservations: canCheckMyReservations\n  });\n};\n\nfunction mapStateToProps(state) {\n  return {\n    rol: state.user.rol\n  };\n}\n\nexport default connect(mapStateToProps)(Menu);","map":null,"metadata":{},"sourceType":"module"}