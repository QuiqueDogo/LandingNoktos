{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRef, useState } from \"react\";\nimport styles from \"./style.module.scss\";\nimport { useAnimate } from \"customHooks/useAnimate\";\nimport { Button, Slide, TextField } from \"@material-ui/core\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { hideLoader, showLoader } from \"redux/actions/application\";\nimport { removeDoubleSpaces } from 'utils/utils';\nimport Swal from \"sweetalert2\";\nimport { registerUserRequest } from \"services/authService\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Contact() {\n  const info = useRef();\n  const dispatch = useDispatch();\n  const container = useRef();\n  const {\n    0: contact,\n    1: setContact\n  } = useState(null);\n  const refContent = useRef(null);\n  const {\n    0: dataRegister,\n    1: setdataRegister\n  } = useState({\n    email: \"\",\n    nombre: \"\",\n    apellido_paterno: \"\",\n    apellido_materno: \"\",\n    telefono: \"\",\n    rfc: null\n  });\n  const {\n    0: dataContact,\n    1: setdataContact\n  } = useState({\n    nombre: \"\",\n    correo: \"\",\n    empresa: \"\",\n    telefono: \"\",\n    asunto: \"\",\n    mensaje: \"\",\n    is_totalplay: true\n  });\n  const dataRefs = [{\n    ref: info,\n    classes: [\"up\"]\n  }];\n  useEffect(() => {\n    dispatch(hideLoader());\n  }, []);\n  useAnimate(container, dataRefs);\n\n  const handleSubmitRegister = e => {\n    e.preventDefault();\n    dispatch(showLoader());\n    let values = dataContact;\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    axios.post(`https://api.noktos.com/api/zohoCRM/nuevoProspecto`, values, config).then(response => {\n      dispatch(hideLoader());\n\n      if (response.data.res) {\n        // clearForm();\n        Swal.fire({\n          title: \"GRACIAS POR CONTACTARNOS HEMOS RECIBIDO TU CORREO\",\n          text: `Nos comunicaremos contigo lo más pronto posible`,\n          icon: \"success\",\n          confirmButtonText: \"Ok\"\n        });\n        setdataContact({\n          nombre: \"\",\n          correo: \"\",\n          empresa: \"\",\n          telefono: \"\",\n          asunto: \"\",\n          mensaje: \"\"\n        });\n      } else {\n        // resetIsSubmiting();\n        setdataContact({\n          nombre: \"\",\n          correo: \"\",\n          empresa: \"\",\n          telefono: \"\",\n          asunto: \"\",\n          mensaje: \"\"\n        });\n        Swal.fire({\n          title: \"Error\",\n          text: `Error al envíar la información`,\n          icon: \"error\",\n          confirmButtonText: \"Ok\"\n        });\n      }\n    }).catch(error => {\n      dispatch(hideLoader()); // resetIsSubmiting();\n\n      Swal.fire({\n        title: \"Error\",\n        text: `Error al envíar la información`,\n        icon: \"error\",\n        confirmButtonText: \"Ok\"\n      });\n      setdataContact({\n        nombre: \"\",\n        correo: \"\",\n        empresa: \"\",\n        telefono: \"\",\n        asunto: \"\",\n        mensaje: \"\"\n      });\n      console.log(error);\n    });\n  };\n\n  const handleSubmitRegisterNoktos = e => {\n    e.preventDefault();\n    let values = {\n      email: dataRegister.email,\n      name: dataRegister.nombre,\n      apellido_paterno: dataRegister.apellido_paterno,\n      apellido_materno: dataRegister.apellido_materno,\n      telefono: dataRegister.telefono,\n      rfc: dataRegister.rfc,\n      id_catalogo_suscripcion: 0,\n      id_catalogo_membresia: 0,\n      is_totalplay: true\n    }; // if (values.rfc === \"\" || !values.rfc) {\n    //   values.rfc = null;\n    // }\n    // values.id_catalogo_membresia = 0;\n    // values.id_catalogo_suscripcion = 0;\n\n    dispatch(showLoader());\n    let request = {};\n    const keys = Object.keys(values);\n    keys.map(key => {\n      request = _objectSpread(_objectSpread({}, request), {}, {\n        [key]: removeDoubleSpaces(values[key])\n      });\n    });\n    registerUserRequest(request).then(response => {\n      dispatch(hideLoader());\n\n      if (response.status === 200 || response.status === 204) {\n        // setloginView(true)\n        // clearForm();\n        // showOverlay();\n        setdataRegister({\n          email: \"\",\n          nombre: \"\",\n          apellido_paterno: \"\",\n          apellido_materno: \"\",\n          telefono: \"\",\n          rfc: \"\"\n        });\n        Swal.fire({\n          title: \"¡Enhorabuena!\",\n          text: \"Antes de iniciar sesión revisa tu correo electrónico para confirmar tu cuenta. \",\n          icon: \"success\",\n          confirmButtonText: \"Continuar\"\n        });\n      } else {\n        // resetIsSubmiting();\n        Swal.fire({\n          title: \"Error\",\n          text: \"No se pudo realizar el registro, verifique su información\",\n          icon: \"error\",\n          confirmButtonText: \"Ok\"\n        });\n      }\n    }).catch(error => {\n      dispatch(hideLoader()); // resetIsSubmiting();\n      // setdataRegister({email:\"\",nombre:\"\",apellido_paterno:\"\", apellido_materno:\"\",telefono :\"\",rfc:\"\"})\n\n      try {\n        if (error.response !== undefined) {\n          var _error$response, _error$response$data;\n\n          let errorMessage = \"\";\n          Object.keys((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.errors).forEach(nameKey => {\n            if (nameKey === \"email\") {\n              errorMessage += `Ya existe una cuenta con el correo ingresado, intente recuperar su contraseña \\n`;\n            }\n          });\n          Swal.fire({\n            title: \"El correo ya existe\",\n            text: `No se pudo realizar el registro, ${errorMessage}`,\n            icon: \"warning\",\n            confirmButtonText: \"Ok\"\n          });\n        } else {\n          Swal.fire({\n            title: \"Error en el servidor\",\n            text: `No se pudo realizar el registro`,\n            icon: \"warning\",\n            confirmButtonText: \"Ok\"\n          });\n        }\n      } catch (ex) {\n        Swal.fire({\n          title: \"Error en el servidor\",\n          text: `No se pudo realizar el registro`,\n          icon: \"warning\",\n          confirmButtonText: \"Ok\"\n        });\n      }\n    });\n  };\n\n  const handleChangeRegister = ({\n    target\n  }) => {\n    const {\n      value,\n      name\n    } = target;\n    setdataRegister(_objectSpread(_objectSpread({}, dataRegister), {}, {\n      [name]: value\n    }));\n  };\n\n  const contactChange = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n    setdataContact(_objectSpread(_objectSpread({}, dataContact), {}, {\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsx(\"section\", {\n    ref: container,\n    className: styles.MainPage,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.MainPage__container,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Button, {\n          onClick: () => setContact(true),\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Quiero Registrarme\"\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: () => setContact(false),\n          variant: \"contained\",\n          color: \"secondary\",\n          children: \"Quiero Informacion\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        ref: info,\n        style: {\n          display: \"none\"\n        }\n      }), (contact == true || contact === false) && /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.MainPage__container__info,\n        children: [contact == false && /*#__PURE__*/_jsx(Slide, {\n          container: info.current,\n          direction: \"left\",\n          in: !contact,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxs(ValidatorForm, {\n              fullWidth: true,\n              onSubmit: handleSubmitRegister,\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                children: \"Contacto\"\n              }), /*#__PURE__*/_jsxs(\"div\", {\n                className: `row ${styles.content_contact}`,\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-sm-12 col-md-6\",\n                  children: /*#__PURE__*/_jsx(TextValidator, {\n                    fullWidth: true,\n                    style: {\n                      margin: \"10px 0\"\n                    },\n                    label: \"Nombre\",\n                    name: \"nombre\",\n                    value: dataContact.nombre,\n                    onChange: contactChange,\n                    variant: \"outlined\",\n                    validators: [\"required\"],\n                    errorMessages: [\"\"]\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-sm-12 col-md-6\",\n                  children: /*#__PURE__*/_jsx(TextValidator, {\n                    fullWidth: true,\n                    style: {\n                      margin: \"10px 0\"\n                    },\n                    label: \"Correo Electronico\",\n                    name: \"correo\",\n                    value: dataContact.correo,\n                    onChange: contactChange,\n                    variant: \"outlined\",\n                    validators: [\"required\", \"isEmail\"],\n                    errorMessages: [\"\", \"Email Incorrecto\"]\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-sm-12 col-md-6\",\n                  children: /*#__PURE__*/_jsx(TextValidator, {\n                    name: \"telefono\",\n                    value: dataContact.telefono,\n                    fullWidth: true,\n                    style: {\n                      margin: \"10px 0\"\n                    },\n                    label: \"Telefono\",\n                    onChange: contactChange,\n                    variant: \"outlined\",\n                    validators: [\"required\"],\n                    errorMessages: [\"\"]\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-sm-12 col-md-6\",\n                  children: /*#__PURE__*/_jsx(TextValidator, {\n                    name: \"empresa\",\n                    value: dataContact.empresa,\n                    fullWidth: true,\n                    style: {\n                      margin: \"10px 0\"\n                    },\n                    onChange: contactChange,\n                    label: \"Empresa\",\n                    variant: \"outlined\",\n                    validators: [\"required\"],\n                    errorMessages: [\"\"]\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsx(TextValidator, {\n                    name: \"asunto\",\n                    value: dataContact.asunto,\n                    fullWidth: true,\n                    style: {\n                      margin: \"10px 0\"\n                    },\n                    label: \"Asunto\",\n                    onChange: contactChange,\n                    variant: \"outlined\",\n                    validators: [\"required\"],\n                    errorMessages: [\"\"]\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-md-12\",\n                  children: /*#__PURE__*/_jsx(TextValidator, {\n                    fullWidth: true,\n                    name: \"mensaje\",\n                    value: dataContact.mensaje,\n                    onChange: contactChange,\n                    multiline: true,\n                    rows: 6,\n                    style: {\n                      margin: \"10px 0\"\n                    },\n                    label: \"Mensaje\",\n                    variant: \"outlined\",\n                    validators: [\"required\"],\n                    errorMessages: [\"\"]\n                  })\n                })]\n              }), /*#__PURE__*/_jsx(Button, {\n                variant: \"contained\",\n                color: \"default\",\n                type: \"submit\",\n                children: \"Enviar\"\n              })]\n            })\n          })\n        }), contact == true && /*#__PURE__*/_jsx(Slide, {\n          in: contact,\n          container: info.current,\n          direction: \"right\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(ValidatorForm, {\n              fullWidth: true,\n              onSubmit: handleSubmitRegisterNoktos,\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: `row ${styles.content_contact_register}`,\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.two_img,\n                  children: [/*#__PURE__*/_jsx(\"img\", {\n                    src: \"/img/totalplay.png\",\n                    alt: \"noktos\",\n                    srcset: \"\"\n                  }), /*#__PURE__*/_jsx(\"img\", {\n                    src: \"/img/noktos_logo.png\",\n                    alt: \"totalplay\",\n                    srcset: \"\"\n                  })]\n                }), /*#__PURE__*/_jsx(\"h4\", {\n                  style: {\n                    color: \"#00c2ff\",\n                    margin: 0\n                  },\n                  children: \"\\xA1Registrate!\"\n                }), /*#__PURE__*/_jsx(\"p\", {\n                  style: {\n                    fontSize: \"1rem\"\n                  },\n                  children: \"Completa tu registro y comienza a disfrutar los beneficios de noktos.\"\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-md-12 p-1\",\n                  children: /*#__PURE__*/_jsx(TextValidator, {\n                    fullWidth: true,\n                    id: \"correo_electronico\",\n                    name: \"email\",\n                    label: \"Correo Electronico\",\n                    value: dataRegister.email,\n                    variant: \"outlined\",\n                    onChange: handleChangeRegister,\n                    validators: [\"required\", \"isEmail\"],\n                    errorMessages: [\"\", \"Email Incorrecto\"]\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-md-6  p-1\",\n                  children: /*#__PURE__*/_jsx(TextValidator, {\n                    fullWidth: true,\n                    id: \"name\",\n                    name: \"nombre\",\n                    label: \"Nombre\",\n                    value: dataRegister.nombre,\n                    variant: \"outlined\",\n                    onChange: handleChangeRegister,\n                    validators: [\"required\"],\n                    errorMessages: [\"\"]\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-md-6  p-1\",\n                  children: /*#__PURE__*/_jsx(TextValidator, {\n                    fullWidth: true,\n                    id: \"apellido_paterno\",\n                    name: \"apellido_paterno\",\n                    label: \"Apellido Paterno\",\n                    value: dataRegister.apellido_paterno,\n                    variant: \"outlined\",\n                    onChange: handleChangeRegister,\n                    validators: [\"required\"],\n                    errorMessages: [\"\"]\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-md-6  p-1\",\n                  children: /*#__PURE__*/_jsx(TextValidator, {\n                    fullWidth: true,\n                    id: \"apellido_materno\",\n                    name: \"apellido_materno\",\n                    label: \"Apellido Materno\",\n                    value: dataRegister.apellido_materno,\n                    variant: \"outlined\",\n                    onChange: handleChangeRegister,\n                    validators: [\"required\"],\n                    errorMessages: [\"\"]\n                  })\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"col-md-6  p-1\",\n                  children: /*#__PURE__*/_jsx(TextValidator, {\n                    fullWidth: true,\n                    id: \"Telefono\",\n                    name: \"telefono\",\n                    label: \"Telefono\",\n                    value: dataRegister.telefono,\n                    variant: \"outlined\",\n                    onChange: handleChangeRegister,\n                    validators: [\"required\"],\n                    errorMessages: [\"\"]\n                  })\n                }), /*#__PURE__*/_jsx(Button, {\n                  variant: \"contained\",\n                  color: \"default\",\n                  type: \"submit\",\n                  children: \"Registrarme\"\n                })]\n              })\n            })\n          })\n        })]\n      })]\n    })\n  });\n}\n\nexport default Contact;","map":null,"metadata":{},"sourceType":"module"}