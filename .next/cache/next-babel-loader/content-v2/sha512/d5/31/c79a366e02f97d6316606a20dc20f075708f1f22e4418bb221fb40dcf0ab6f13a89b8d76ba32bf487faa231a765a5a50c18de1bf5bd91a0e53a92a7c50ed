{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"animate.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\nimport \"swiper/components/pagination/pagination.scss\";\nimport \"../styles/main.scss\";\nimport { Provider } from \"react-redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport returnStoreAndPersistor from \"../redux/store\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { setHistorialPages } from \"../redux/actions/application\";\nimport { clearHistorialPages } from '../redux/actions/application';\nconst {\n  store,\n  persistor\n} = returnStoreAndPersistor();\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    0: cleanHistorial,\n    1: setCleanHistorial\n  } = useState(false);\n  useEffect(() => {\n    if (!cleanHistorial) {\n      setCleanHistorial(true);\n      dispatch(clearHistorialPages());\n    }\n\n    const currentPath = router.asPath;\n    dispatch(setHistorialPages(currentPath));\n  }, [Component]);\n  return /*#__PURE__*/_jsx(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsx(PersistGate, {\n      loading: null,\n      persistor: persistor,\n      children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n    })\n  });\n};\n\nconst makestore = () => store;\n\nconst wrapper = createWrapper(makestore);\nexport default wrapper.withRedux(MyApp);","map":null,"metadata":{},"sourceType":"module"}