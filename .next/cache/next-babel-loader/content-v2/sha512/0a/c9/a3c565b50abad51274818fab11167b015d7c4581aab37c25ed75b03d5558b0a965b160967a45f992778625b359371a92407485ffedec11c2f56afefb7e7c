{"ast":null,"code":"import { reset } from \"../redux/actions/userAction\";\nexport var validateAppVersion = function validateAppVersion(dispatch) {\n  var version = localStorage.getItem(\"version_app\");\n  var currentVersion = process.env.NEXT_PUBLIC_CURRENT_VERSION_APP;\n  var url = process.env.NEXT_PUBLIC_BASE_URL;\n  console.log(\"version\", version);\n  console.log(\"currentVersion\", currentVersion);\n  console.log(\"url\", url);\n  console.log(\"timeout\", process.env.NEXT_PUBLIC_GET_HOTELS_TIMEOUT);\n  console.log(\"process.env\", process.env);\n\n  if (version) {\n    console.log(\"VALIDATE\");\n\n    if (parseInt(version) < parseInt(currentVersion)) {\n      dispatch(reset());\n      localStorage.setItem(\"version_app\", currentVersion);\n      emptyCache();\n    }\n  } else {\n    console.log(\"RESET\");\n    dispatch(reset());\n    localStorage.setItem(\"version_app\", currentVersion);\n    emptyCache();\n  }\n};\n\nvar emptyCache = function emptyCache() {\n  if ('caches' in window) {\n    caches.keys().then(function (names) {\n      // Delete all the cache files\n      names.forEach(function (name) {\n        caches[\"delete\"](name);\n      });\n    }); // Makes sure the page reloads. Changes are only visible after you refresh.\n\n    window.location.reload(true);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}