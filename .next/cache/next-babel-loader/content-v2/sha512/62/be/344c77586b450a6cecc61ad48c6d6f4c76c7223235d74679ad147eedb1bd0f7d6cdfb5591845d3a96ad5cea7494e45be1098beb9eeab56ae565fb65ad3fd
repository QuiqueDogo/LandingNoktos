{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { types } from \"../types\";\nlet initState = {\n  rol: {},\n  user: {},\n  searchInfo: {},\n  userWallet: {},\n  reloadUserWallet: \"\",\n  isAuthenticated: false\n};\nexport default ((state = initState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case types.set_is_authenticated:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isAuthenticated: payload.isAuth\n      });\n\n    case types.add_user:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: payload.user\n      });\n\n    case types.add_rol:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rol: payload.userRol\n      });\n\n    case types.logout:\n      return initState;\n\n    case types.set_search_form:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchInfo: payload\n      });\n\n    case types.set_user_wallet:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userWallet: payload\n      });\n\n    case types.reload_user_wallet:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reloadUserWallet: payload\n      });\n\n    default:\n      return state;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}